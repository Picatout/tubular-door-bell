\ ***************************************
\   Application module written in 
\   stm8_eForth
\ ***************************************

\ Peripherals usage:
\ TIMER1 CHANNEL 1 PÅ´M SERVO-MOTOR SW1 OUTPUT ON PC1 PIN 23
\ TIMER1 CHANNEL 2 PWM SERVO-MOTOR SW2 OUTPUT ON PC2 PIN 24
\ TIMER1 CHANNEL 3 PWM SERVO-MOTOR SW3 OUTPUT ON PC3 PIN 25
\ TIMER2 CHANNEL 1 PWM SERVO-MOTOR SW4 OUTPUT ON PD4 PIN 2
\ TIMER2 CHANNEL 2 PWM SERVO-MOTOR SW5 OUTPUT ON PD3 PIN 1
\ RED LED ON PD0 PIN 30
\ ORANGE LED ON PD1 PIN 31
\ YELLOW LED ON PD2 PIN 32
\ GREEN LED ON PC6 PIN 29 
\ BLUE LED ON PC7 PIN 28 
\ RING BUTTON ON PF4 PIN 13
\ RESET BUTTON ON NRST pin 6 
\ SWIM SIGNAL ON PIN 31
\ *************************************************************

\ REMOVE COMMENT ON NEXT LINE WHEN READY TO FLASH
 TO-FLASH 

\ PORT C REGISTERS
$500A DUP CONSTANT PC-ODR \ OUTPUT DATA REG.
1+ DUP CONSTANT PC-IDR \ INPUT DATA REG.
1+ DUP CONSTANT PC-DDR \ DATA DIRECTION REG.
1+ DUP CONSTANT PC-CR1 \ CONTROL REG. 1
1+ DUP CONSTANT PC-CR2 \ CONTROL REG. 2

\ PORT D REGISTERS
$500F DUP CONSTANT PD-ODR \ OUTPUT DATA REG.
1+ DUP CONSTANT PD-IDR \ INPUT DATA REG.
1+ DUP CONSTANT PD-DDR \ DATA DIRECTION REG.
1+ DUP CONSTANT PD-CR1 \ CONTROL REG. 1
1+ DUP CONSTANT PD-CR2 \ CONTROL REG. 2

\ PORT F REGISTERS
$5019 DUP CONSTANT PF-ODR \ OUTPUT DATA REG.
1+ DUP CONSTANT PF-IDR \ INPUT DATA REG.
1+ DUP CONSTANT PF-DDR \ DATA DIRECTION REG.
1+ DUP CONSTANT PF-CR1 \ CONTROL REG. 1
1+ DUP CONSTANT PF-CR2 \ CONTROL REG. 2


\ TIMER 1 REGISTERS
$5250 DUP CONSTANT T1-CR1 \ CONTROL REGISTER 1
1+ DUP CONSTANT T1-CR2 \ CONTROL REGISTER 2
1+ DUP CONSTANT T1-SMCR \ SLAVE MODE CONTROL REGISTER
1+ DUP CONSTANT T1-ETR \ EXTERNAL TRIGGER REGISTER
1+ DUP CONSTANT T1-IER \ INTERRUPT ENABLE REGISTER
1+ DUP CONSTANT T1-SR1 \ STATUS REGISTER 1
1+ DUP CONSTANT T1-SR2  \ STATUS REGISTER 2
1+ DUP CONSTANT T1-EGR \ EVENT GENERATION REGISTER
1+ DUP CONSTANT T1-CCMR1 \ CAPTURE/COMPARE MODE REG. 1
1+ DUP CONSTANT T1-CCMR2 \ CAPTURE/COMPARE MODE REG. 2
1+ DUP CONSTANT T1-CCMR3 \ CAPTURE/COMPARE MODE REG. 3
1+ DUP CONSTANT T1-CCMR4 \ CAPTURE/COMPARE MODE REG. 4
1+ DUP CONSTANT T1-CCER1 \ CAPTURE/COMPARE ENABLE REG. 1
1+ DUP CONSTANT T1-CCER2 \ CAPTURE/COMPARE ENABLE REG. 2
1+ DUP CONSTANT T1-CNTRH \ COUNTER HIGH
1+ DUP CONSTANT T1-CNTRL \ COUNTER LOW
1+ DUP CONSTANT T1-PSCRH \ PRESCALER HIGH
1+ DUP CONSTANT T1-PSCRL \ PRESCALER LOW
1+ DUP CONSTANT T1-ARRH  \ AUTO-RELOAD HIGH
1+ DUP CONSTANT T1-ARRL  \ AUTO-RELOAD LOW
1+ DUP CONSTANT T1-RCR \ REPETITION COUNTER
1+ DUP CONSTANT T1-CCR1H \ CAPTURE/COMPARE REG. 1 HIGH
1+ DUP CONSTANT T1-CCR1L \ CAPTURE/COMPARE REG. 1 LOW
1+ DUP CONSTANT T1-CCR2H \ CAPTURE/COMPARE REG. 2 HIGH
1+ DUP CONSTANT T1-CCR2L \ CAPTURE/COMPARE REG. 2 LOW
1+ DUP CONSTANT T1-CCR3H \ CAPTURE/COMPARE REG. 3 HIGH
1+ DUP CONSTANT T1-CCR3L \ CAPTURE/COMPARE REG. 3 LOW
1+ DUP CONSTANT T1-CCR4H \ CAPTURE/COMPARE REG. 4 HIGH
1+ DUP CONSTANT T1-CCR4L \ CAPTURE/COMPARE REG. 4 LOW
1+ DUP CONSTANT T1-BKR \ BREAK REGISTER
1+ DUP CONSTANT T1-DTR \ DEAD-TIME REGISTER
1+ DUP CONSTANT T1-OISR \ OUTPUT IDLE STATE REGISTER

\ TIMER 2 REGISTERS
$5300 DUP CONSTANT T2-CR1 \ CONTROL REGISTER 1
1+ DUP CONSTANT T2-IER  \ INTERRUPT ENABLE REGISTER
1+ DUP CONSTANT T2-SR1 \ STATUS REGISTER 1
1+ DUP CONSTANT T2-SR2 \ STATUS REGISTER 2
1+ DUP CONSTANT T2-EGR \ EVENT GENERATOR
1+ DUP CONSTANT T2-CCMR1 \ CAPTURE/COMPARE MODE CHANNEL 1
1+ DUP CONSTANT T2-CCMR2 \ CAPTURE/COMPARE MODE CHANNEL 2
1+ DUP CONSTANT T2-CCMR3 \ CAPTURE/COMPARE MODE CHANNEL 3
1+ DUP CONSTANT T2-CCER1 \ CAPTURE/COMPARE ENABLE REG. 1
1+ DUP CONSTANT T2-CCER2 \ CAPTURE/COMPARE ENABLE REG. 2
1+ DUP CONSTANT T2-CNTRH \ COUNTER HIGH
1+ DUP CONSTANT T2-CNTRL \ COUNTER LOW
1+ DUP CONSTANT T2-PSCR \ CLOCK PRESCALER
1+ DUP CONSTANT T2-ARRH \ AUTO-RELOAD PERIOD REG. HIGH
1+ DUP CONSTANT T2-ARRL \ AUTO-RELOAD PERIOD REG. LOW
1+ DUP CONSTANT T2-CCR1H \ CAPTURE/COMPARE VALUE CH. 1 HIGH
1+ DUP CONSTANT T2-CCR1L \ CAPTURE/COMPARE VALUE CH. 1 LOW
1+ DUP CONSTANT T2-CCR2H \ CAPTURE/CAMPARE VALUE CH. 2 HIGH
1+ DUP CONSTANT T2-CCR2L \ CAPTURE/COMPARE VALUE CH. 2 LOW
1+ DUP CONSTANT T2-CCR3H \ CAPTURE/COMPARE VALUE CH. 3 HIGH
1+ DUP CONSTANT T2-CCR3L \ CAPTURE/COMPARE VALUE CH. 3 LOW

: BSET ( b a -- ) \ set register bit
    DUP C@ ROT 1 SWAP LSHIFT OR SWAP C! ;

: BRES ( b a -- ) \ reset register bit
    DUP C@ ROT 1 SWAP LSHIFT NOT AND SWAP C! ;

: BREAD ( b a -- 0|1 ) \ read register bit
    OVER >R C@ 1 ROT LSHIFT AND R> RSHIFT ;


: BTOGL ( b a -- ) \ toggle register bit
    DUP C@ ROT 1 SWAP LSHIFT XOR SWAP C! ; 

: R16! ( n a -- ) \ set 16 bits register value
    OVER 8 RSHIFT OVER C! 1+ C! ;

: PWM-PER ( fr -- u ) \ compute ARR value from frequency
\ for timer clock = 2Mhz, i.e. prescale divisor 8.
    31250 32 ( fr -- fr 31250 64 ) 
    ROT ( -- 31250 64 fr )
    DUP ( --  31250 64 fr fr ) 
    2/ ( --  31250 64 fr fr/2 )
    >R ( --  31250 64 fr ) ( R: -- fr/2 ) 
    */MOD ( -- r q ) \ 31250*8/fr -> remainder and quotient
    SWAP ( -- q r ) \ remainder on top 
    R>   ( -- q r fr/2 ) \ round to nearest integer 
    /    ( -- q 0|1 ) \ 
    + ( -- u ) \ nearest integer
; 

: INIT-LED-OUTPUT ( -- ) \ initialize LED pins in output mode.
    3 6 LSHIFT PC-ODR 2DUP C! 2 + C! \ PC6|PC7 GREEN|BLUE
    7 PD-ODR 2DUP C! 2 + SWAP 32 + SWAP C! \ PD0|PD1|PD2  
;

: LED-TEST ( -- ) \ LIGHT LEDS in sequence 
    2 FOR 2 I - PD-ODR 2DUP BRES 300 PAUSE BSET NEXT \ RED-ORANGE-YELL
    1 FOR 7 I - PC-ODR 2DUP BRES 300 PAUSE BSET NEXT \ GREEN-BLUE
;

: INIT-TIMERS ( -- ) \ initialize TIMER1 and TIMER2 in PMW mode.
\ T2 CH1 & CH2  SM4 & SM5  
    4 T2-PSCR C! \ prescale DIV 16, Fclock=16Mhz/8=1Mhz 
    50 PWM-PER T2-ARRH R16! \ period 
    1000 T2-CCR1H R16! \ SERVO CH1 PULSE WIDTH
    1000 T2-CCR2H R16! \ SERVO CH2 
    $D 3 LSHIFT T2-CCMR1 C! \ CH1 MODE PWM 
    $D 3 LSHIFT T2-CCMR2 C! \ CH2 MODE PWM
    $11 T2-CCER1 C! \ CH1 & CH2 ENABLE
    7 T2-EGR C! \ update CCR1,2 registers 
    1 T2-CR1 C! \ enable T2 counter 
\ T1 CH1,CH2,CH3 SM1,SM2,SM3
    16 T1-PSCRH R16! \  PRESCALE DIVISOR
    50 PWM-PER T1-ARRH R16! 
    1000 T1-CCR1H R16! 
    1000 T1-CCR2H R16!
    1000 T1-CCR3H R16!
    $D 3 LSHIFT T1-CCMR1 C!
    $D 3 LSHIFT T1-CCMR2 C!
    $D 3 LSHIFT T1-CCMR3 C!
    $11 T1-CCER1 C! \ ENABLE CH1,CH2
    1 T1-CCER2 C! \ ENABLE CH3
    $80 T1-BKR C! \ MAIN OUTPUT ENABLE
    15 T1-EGR C! \ update CCR1,2,3
    1 T1-CR1 C! \ ENABLE T1 COUNTER
;

: APP-INIT ( -- ) \ initialize application peripherals.
    INIT-LED-OUTPUT
    LED-TEST
    4 PF-CR1 BSET \ enable pull-up on PF-4 (ring button input)
    INIT-TIMERS
;

: RING? ( -- 0|-1 )
\ check ring button on PF4
    20 TIMER \  msec debounce
    0 BEGIN
        4 PF-IDR BREAD 
        IF 1- ELSE 1+ THEN  
        1 PAUSE 
        TIMEOUT? 
      UNTIL
      0< NOT  
;

: CCR! ( u1 u2 u3 -- ) \ u1=position, u2=Tx-CCR1H, u3 channel
\ Store u1 value in Tx-CCR register
    2* + R16!
;

: SERVO-POS ( u1 u2 -- ) \ u1=position, u2=channel
\ update servo-motor position
    DUP 3 - 0< IF 
    T1-CCR1H SWAP CCR!
    15 T1-EGR C! \ update 3 channels
    ELSE
    3 - 
    T2-CCR1H SWAP CCR! 
    7 T2-EGR C! \ update 2 channels
    THEN
; 

: BACK-OFF ( u1 -- ) \ u1=channel 
\ backoff hammer, rest poistion 1000
    1000 SWAP 
    SERVO-POS
;

: RING ( -- ) \ sound tubular bells.
    4 FOR 1700 I SERVO-POS 130 PAUSE I BACK-OFF 370 PAUSE NEXT 
;

: DOORBELL
    APP-INIT
    BEGIN
    RING? IF RING THEN
    AGAIN
; 


